/**
 * 主程序
 */
var path = require('path');
var cluster = require('cluster');
var fs = require('fs');

global.harbors = {};
harbors.version = '0.0.1';//版本号
harbors.serverName = 'Node Harbors';//服务器名字

//导入工具集
harbors.utils = require('./lib/utils');

//导入服务器模块
var _l_config = require('./lib/config');
var _m_cluster = require('./module/cluster');
var _m_path = require('./module/path');

//配置文件处理
harbors.config = _l_config.load('./node_modules/harbors2/config/config.ini');
_l_config.merge();
//console.log(harbors.config);


exports.start = function(){

    //开启进程集群
    if(cluster.isMaster){
        _m_cluster.master();
    }else{
        _m_cluster.worker(function(req,res){
            var p = _m_path.analysis(req);
            console.log(p);if(p.File=='favicon.ico') return false;
            /*{
                vhostName: 'vhost:127.0.0.1',
                Dir: '/',
                File: 'favicon.ico',
                Extname: '.ico'
            }*/
            var realPath = p.Dir + p.Con;
            var _Con = function(){

                try{
                    require(p.Dir + p.Con)(req,res);
                }catch(err){
                    console.error(err);
                    res.end('404');
                }
            };
            var _File = function(){
                realPath = p.Dir+path.sep+ p.File;
                _m_path.exists(realPath,function(){
                    fs.readFile(realPath, "binary", function (err, file) {
                        if (err) {
                            console.log(err);
                        } else {
                            res.end(file);
                        }
                    });
                },function(){

                    console.log(2)
                });
            };

            _m_path.exists(realPath,_Con,_File);
        });
    }

};
