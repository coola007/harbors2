/**
 * The process of cluster module
 */
var cluster = require('cluster');
var http = require('http');
var fs = require('fs');
var _m_request = require('./request');
var _m_server = require('./server');
var _m_log = require('./log');

/**
 * master process
 */
exports.master = function(){

    var message = function(msg){
        switch(msg.type){
            case 'log':
                _m_log.write(msg);
                break;
        }
    };

    var createWorker = function(){
        var worker = cluster.fork();
        worker.on('exit', function(code, signal) {
            //重启worker（此时进程id会增加1，以示和原错误关闭进程区别）
            !worker.suicide && (console.log('Separation of new sub process process...'),setTimeout(createWorker,2000));
        });
        worker.on('message',function(str,f){
            try{
                str = JSON.parse(str);
            }catch(err){
                console.log(err);
            }
            message(str);
        });
    };

    console.log('HARBORS child_process num is '+harbors.config.server.process);

    for(var i=0;i<harbors.config.server.process;i++){
        createWorker();
    }

};

/**
 * worker process
 * @param {Function} callback
 */
exports.worker = function(callback){
    if(typeof(harbors.config.server.listen)=='string'){
        harbors.config.server.listen = [harbors.config.server.listen];
    }
    for(var i=0;i<harbors.config.server.listen.length;i++){
        http.createServer(function(req,res){
            callback(req,res);
        }).listen(harbors.config.server.listen[i]);
        console.log('listen port '+harbors.config.server.listen[i]);
    }
};

exports.server = function(req,res){
    harbors.debug('Run cluser.server [Module module/cluster.js]');

    var request = _m_request(req,res);
    if(request.vhost==undefined){
        return undefined;
    }
    console.log(request.path)
    //检测文件存在
    console.log(request.vhost.dir + request.path.Url + (request.path.File||''));
    console.log(request.vhost.dir + request.path.Url + (request.path.Module||''));
    var stM = !!(request.path.Extname!='' && fs.existsSync(request.vhost.dir + request.path.Url + (request.path.File||'')));
    var dyM = fs.existsSync(request.vhost.dir + request.path.Url + (request.path.Module||''));
    console.log(stM);
    console.log(dyM);
    if(stM){
        harbors.debug('cluser.request is static [Module module/cluster.js]');
        request.display(request.path.File);
        return undefined;
    }
    if(dyM){
        harbors.debug('cluser.request is dymic [Module module/cluster.js]');
        _m_server.dyM(request);
        return undefined;
    }
    request.notFound();
};