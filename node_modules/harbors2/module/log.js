/**
 * 日志模块
 */
var path = require('path');
var fs = require('fs');
var date = require('../lib/date');

var logDir = {};
var baseDir = path.join(__dirname,'../../../');

exports.log = function(obj){
    obj.type = 'log';
    process.send(JSON.stringify(obj));
};

exports.write = function(data){
    try{
        var dir = path.join(baseDir,data.dir);
        var today = date();
        var logC = today.format('Y-M-D h:m:s')+' '+data.ip+' '+data.host+data.url+' '+data.code+'  '+data.errmsg+'\r\n';
        if(logDir[data.dir]){
            var files = logDir[data.dir];

        }else{
            var existsDir = fs.existsSync(dir);
            if(!existsDir) fs.mkdirSync(dir);

            var files = fs.readdirSync(dir);
            files = files.filter(function(a){
                if(/_\.\d+log/.test(a)) return a;
            });
            //空目录新建日志文件
            if(files.length==0){
                var name = today.format('Y-M-D')+'_1.log';
                fs.writeFileSync(path.join(dir,name),logC);
                logDir[data.dir] = name;
                return;
            }
            //非空目录判断日志文件个数，日志大小
            files = files.sort();
            files = files[files.length-1];
        }
        var stat = fs.statSync(path.join(dir,files));
        if(stat.size>data.size*1024){//超出大小新建文件
            var name = files.replace(/_(\d+)\.log/,function(a){
                var num = a.substr(1,1);
                return '_'+(parseInt(num)+1)+'.log';
            });
            fs.writeFileSync(path.join(dir,name),logC);
            logDir[data.dir] = name;
        }else{//追加log
            fs.appendFile(path.join(dir,files),logC,'utf8',function(err){
                if(err){
                    console.log(err);
                }
            });
        }
    }catch(err){
        console.log(err);
    }
};